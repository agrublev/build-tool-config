{
  root: true,
  parser: 'babel-eslint',
  extends: ['airbnb/base'],
  plugins: ['flowtype', 'jest'],
  env: {
    node: true,
    jest: true,
  },
  settings: {
    flowtype: {
      onlyFilesWithFlowAnnotation: true,
    },
  },
  parserOptions: {
    sourceType: 'module',
    ecmaVersion: 2017,
    ecmaFeatures: {
      jsx: true,
      experimentalObjectRestSpread: true,
    },
  },
  rules: {
    // Do not want to support
    'class-methods-use-this': 'off',
    'padded-blocks': 'off',
    'import/no-extraneous-dependencies': 'off',

    // Want to support but disabled in Airbnb
    'complexity': ['error', 11],
    'jsx-quotes': ['error', 'prefer-double'],
    'newline-before-return': 'error',
    'no-compare-neg-zero': 'error',
    'no-constant-condition': 'error',
    'no-div-regex': 'error',
    'no-eq-null': 'error',
    'no-implicit-coercion': 'error',
    'no-magic-numbers': ['error', {
      ignore: [-1, 0, 1],
      ignoreArrayIndexes: true,
      enforceConst: true,
    }],
    'no-native-reassign': 'error',
    'no-negated-condition': 'error',
    'no-unused-vars': ['error', {
      vars: 'all',
      args: 'none', // Required for flowtype
      ignoreRestSiblings: true,
    }],
    'no-useless-call': 'error',
    'prefer-destructuring': 'error',
    'prefer-promise-reject-errors': ['error', {
      allowEmptyReject: true,
    }],
    'import/default': 'error',
    'import/named': 'error',
    'jest/no-identical-title': 'error',
    'jest/valid-expect': 'error',

    // Does not work with Flowtype
    'no-extra-parens': 'off',
    'sort-imports': 'off',
    'import/order': 'off',

    // Does not work with class properties spec
    'no-invalid-this': 'off',

    // Flowtype support
    'flowtype/boolean-style': 'error',
    'flowtype/define-flow-type': 'error',
    'flowtype/delimiter-dangle': ['error', 'always-multiline'],
    'flowtype/generic-spacing': ['error', 'never'],
    'flowtype/no-dupe-keys': 'error',
    'flowtype/no-primitive-constructor-types': 'error',
    'flowtype/no-types-missing-file-annotation': 'error',
    'flowtype/no-weak-types': ['error', {
      any: true,
      'Object': false,
      'Function': true,
    }],
    'flowtype/object-type-delimiter': ['error', 'comma'],
    'flowtype/require-parameter-type': ['error', {
      excludeArrowFunctions: true,
    }],
    'flowtype/require-return-type': ['error', {
      excludeArrowFunctions: true,
    }],
    'flowtype/require-valid-file-annotation': ['error', 'always'],
    'flowtype/require-variable-type': 'off',
    'flowtype/semi': ['error', 'always'],
    'flowtype/sort-keys': ['error', 'asc', {
      natural: true,
    }],
    'flowtype/space-after-type-colon': ['error', 'always', {
      allowLineBreak: false,
    }],
    'flowtype/space-before-generic-bracket': ['error', 'never'],
    'flowtype/space-before-type-colon': ['error', 'never'],
    'flowtype/type-id-match': 'off',
    'flowtype/union-intersection-spacing': ['error', 'always'],
    'flowtype/use-flow-type': 'error',
  },
}
